<%- include('../partials/header', { title: 'Panel de Administración' }) %>

<div class="container mt-4">
  <h1>Panel de Administración</h1>

  <div class="card my-3">
    <div class="card-body">
      <h5 class="card-title">Total de accesos</h5>
      <p class="card-text fs-4"><strong><%= stats.totalAccesos %></strong></p>
    </div>
  </div>

  <div class="row">
    <div class="col-md-6">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Accesos por día</h5>
          <canvas id="chartAccesos" height="300"></canvas>
        </div>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Detalles</h5>
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Fecha</th>
                <th>Cantidad</th>
              </tr>
            </thead>
            <tbody>
              <% stats.accesosPorDia.forEach(dia => { %>
                <tr>
                  <td><%= dia.fecha %></td>
                  <td><%= dia.cantidad %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      const ctx = document.getElementById('chartAccesos').getContext('2d');
      const chartData = <%- chartData %>; // Usamos los datos pre-formateados
      
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: chartData.map(item => item.fecha),
          datasets: [{
            label: 'Accesos por día',
            data: chartData.map(item => item.cantidad),
            backgroundColor: 'rgba(54, 162, 235, 0.7)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                precision: 0,
                stepSize: 1
              }
            },
            x: {
              ticks: {
                autoSkip: false,
                maxRotation: 45,
                minRotation: 45
              }
            }
          }
        }
      });
    } catch (error) {
      console.error('Error al crear el gráfico:', error);
      document.getElementById('chartAccesos').innerHTML = 
        '<div class="alert alert-danger">Error al cargar el gráfico</div>';
    }

    
  });
</script>

<script>
  async function actualizarContador() {
    const response = await fetch('/admin/contador');
    const { totalAccesos } = await response.json();
    document.querySelector('.card-text strong').textContent = totalAccesos;
  }

  // Actualizar cada 30 segundos
  setInterval(actualizarContador, 30000);
</script>



<%- include('../partials/footer') %>